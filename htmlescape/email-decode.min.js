!function() {
  /**
   * @param {?} fmt
   * @return {undefined}
   */
  function compile(fmt) {
    try {
      if ("undefined" == typeof console) {
        return;
      }
      if ("error" in console) {
        console.error(fmt);
      } else {
        console.log(fmt);
      }
    } catch (e) {
    }
  }
  /**
   * @param {string} end
   * @return {?}
   */
  function done(end) {
    return parseEl.innerHTML = '<a href="' + end.replace(/"/g, "&quot;") + '"></a>', parseEl.childNodes[0].getAttribute("href") || "";
  }
  /**
   * @param {string} uri
   * @param {number} position
   * @return {?}
   */
  function parse(uri, position) {
    var cDigit = uri.substr(position, 2);
    return parseInt(cDigit, 16);
  }
  /**
   * @param {string} v
   * @param {number} options
   * @return {?}
   */
  function next(v, options) {
    /** @type {string} */
    var json = "";
    var url = parse(v, options);
    var k = options + 2;
    for (;k < v.length;k += 2) {
      /** @type {number} */
      var lo = parse(v, k) ^ url;
      json += String.fromCharCode(lo);
    }
    try {
      /** @type {string} */
      json = decodeURIComponent(escape(json));
    } catch (fmt) {
      compile(fmt);
    }
    return done(json);
  }
  /**
   * @param {Object} context
   * @return {undefined}
   */
  function initialize(context) {
    var resultItems = context.querySelectorAll("a");
    /** @type {number} */
    var i = 0;
    for (;i < resultItems.length;i++) {
      try {
        var result = resultItems[i];
        var end = result.href.indexOf(closeTag);
        if (end > -1) {
          /** @type {string} */
          result.href = "mailto:" + next(result.href, end + closeTag.length);
        }
      } catch (fmt) {
        compile(fmt);
      }
    }
  }
  /**
   * @param {Object} el
   * @return {undefined}
   */
  function fn(el) {
    var codeSegments = el.querySelectorAll(selector);
    /** @type {number} */
    var i = 0;
    for (;i < codeSegments.length;i++) {
      try {
        var elem = codeSegments[i];
        var parent = elem.parentNode;
        var path = elem.getAttribute(name);
        if (path) {
          var tail = next(path, 0);
          /** @type {Text} */
          var child = document.createTextNode(tail);
          parent.replaceChild(child, elem);
        }
      } catch (fmt) {
        compile(fmt);
      }
    }
  }
  /**
   * @param {Object} element
   * @return {undefined}
   */
  function onError(element) {
    var codeSegments = element.querySelectorAll("template");
    /** @type {number} */
    var i = 0;
    for (;i < codeSegments.length;i++) {
      try {
        success(codeSegments[i].content);
      } catch (fmt) {
        compile(fmt);
      }
    }
  }
  /**
   * @param {HTMLElement} e
   * @return {undefined}
   */
  function success(e) {
    try {
      initialize(e);
      fn(e);
      onError(e);
    } catch (fmt) {
      compile(fmt);
    }
  }
  /** @type {string} */
  var closeTag = "/cdn-cgi/l/email-protection#";
  /** @type {string} */
  var selector = ".__cf_email__";
  /** @type {string} */
  var name = "data-cfemail";
  /** @type {Element} */
  var parseEl = document.createElement("div");
  success(document);
  (function() {
    var tabPage = document.currentScript || document.scripts[document.scripts.length - 1];
    tabPage.parentNode.removeChild(tabPage);
  })();
}();
